{"version":3,"sources":["webpack:///./src/pages/gatsby.js"],"names":["GatsbyPage","render","post","config","siteMetadata","title","name","content","description","id","className","href","React","Component"],"mappings":"qLAMMA,E,gLACFC,OAAA,WACC,IAAIC,EAEI,0EAGR,OACO,kBAAC,IAAD,KACI,kBAAC,IAAD,KACQ,+BAAQA,EAAR,MAAuBC,IAAOC,aAAaC,OAC3C,0BAAMC,KAAK,cAAcC,QAASJ,IAAOC,aAAaI,eAEjE,yBAAKC,GAAG,QAED,6BAASA,GAAG,OACR,4BAAQC,UAAU,SACd,4BAAKR,IAET,gCAAK,uBAAGS,KAAK,4BAAR,UAAL,sLACA,kDACA,4BACC,4BAAI,qDAA+B,4DACnC,4BAAI,6CAAuB,mDAE5B,gLACA,8DAAmC,6BAAM,gDAA2B,6BAApE,uGACA,2BAAG,8CAAyB,6BAA5B,yHAEA,qEACA,4BACC,+HACA,yJACA,8DAED,yEACA,4BACC,4HACA,sFACA,6FAAkE,uBAAGA,KAAK,mHAAR,SAAlE,W,GAvCAC,IAAMC,WAkDhBb","file":"component---src-pages-gatsby-js-8822ef061634ff0c907a.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/layout'\nimport config from '../../gatsby-config'\n\nclass GatsbyPage extends React.Component {\n    render() {\n    \tlet post = {\n    \t\tid: 1,\n    \t\ttitle: 'Как создать сайт при помощи Gatsby.js и развернуть его на GitHub Pages.'\n    \t}\n\n    \treturn (\n            <Layout>\n                <Helmet>\n                        <title>{post.title} | {config.siteMetadata.title}</title>\n                        <meta name=\"description\" content={config.siteMetadata.description} />\n                </Helmet>\n            \t<div id=\"main\">\n\n                    <section id=\"one\">\n                        <header className=\"major\">\n                            <h2>{post.title}</h2>\n                        </header>\n                        <p>У <a href=\"https://www.gatsbyjs.org\">Gatsby</a> отличная документация, поэтому не хочется повторять простые вещи. Это скорее заметка о том, что я сделал (чтобы вспомнить в будущем, что я натворил) чем полноценное руководство.</p>\n                        <p>Чтобы создать сайт:</p>\n                        <ol>\n                        \t<li><div>Установливаем Gatsby</div><code>npm install -g gatsby-cli</code></li>\n                        \t<li><div>Создаем сайт</div><code>gatsby new blog</code></li>\n                        </ol>\n                        <p>Вот и все! Так же для Gatsby уже есть довольно симпатичные темы, поэтому я, чтобы не тратить много времени на создание блога, выбрал одну из них.</p>\n                        <p>Работаем с сайтом через команду <br /><code>gatsby develop</code><br /> которая как обычно запустит сайт локально с hot-reloading (по-умолчанию по адресу localhost:8000).</p>\n                        <p><code>gatsby build</code><br />\n                        создаст финальную оптимизированную версию в папке public. Именно то, что в этой папке и будет нашим статичным сайтом.</p>\n                        <p>Чтобы разместить сайт на GitHub Pages:</p>\n                        <ol>\n                        \t<li>Создаем репозиорий на github.com с именем username.github.io, где username — ваш ник на GitHub.</li>\n                        \t<li>В настройках репозитория: Settings -> Раздел Options -> Секция GitHub Pages подтверждаем, что мы хотим опубликовать сайт.</li>\n                        \t<li>Проверяем username.github.io.</li>\n                        </ol>\n                        <p>Чтобы добавить свой домен на GitHub Pages:</p>\n                        <ol>\n                        \t<li>В настройках репозитория: Settings -> Раздел Options -> Секция GitHub Pages добавляем домен.</li>\n                        \t<li>Создаем файл CNAME в репозитории, где указываем домен.</li>\n                        \t<li>Меняем \"A\" и \"CNAME\" записи для домена (на что меняем смотрим <a href=\"https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site\">здесь</a>).</li>\n                        </ol>\n                    </section>\n\n                </div>\n\n            </Layout>\n        )\n    }\n }\n\nexport default GatsbyPage"],"sourceRoot":""}